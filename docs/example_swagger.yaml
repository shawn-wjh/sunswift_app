openapi: 3.0.0
info:
  title: M15ASushi - Invoice Creation and Validation API
  description: |
    A comprehensive API for creating UBL 2.4-compliant invoices and validating against PEPPOL standards. 
    
    ## v1 capabilities:
    - Generate UBL 2.4-compliant invoices from JSON objects
    - Validate UBL-XML invoice against Australian and New Zealand PEPPOL standards
    - Secure storage of invoices requiring specific user authentication to access
    - Retrieve invoices in XML format
    
    # Guide to testing:
    
    We strongly recommend using [Postman](https://www.postman.com/) for testing our API as it will allow you to authenticate requests easiest.
    
    1. Copy and paste the following script in **Scripts->Post-response**.
          ```javascript var jsonData = pm.response.json();
          if (jsonData.status === "success" && jsonData.data && jsonData.data.token) {
              pm.environment.set("token", jsonData.data.token);
          }
    2. Register or login using the **/v1/users/register** or **/v1/users/login** endpoints respectively.
    3. Copy the `token`, then go to **Authorization**, select **Bearer Token** for the Auth Type and paste your `token`.
    4. All done! Your token will now be automatically used when you call our routes :)
  version: 1.0.0
servers:
  - url: http://sushi-invoice-application.ap-southeast-2.elasticbeanstalk.com

paths:
  /v1/users/register:
    post:
      summary: Register a new user
      description: |
        This endpoint allows a new user to register by providing their email, name, and password. The email must be unique, and the password must meet the specified complexity requirements.
      operationId: registerUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                name:
                  type: string
                  example: "company name"
                  description: "Must be at least 3 characters long and contain only letters and spaces."
                password:
                  type: string
                  description: "Must be at least 8 characters long, include one uppercase letter, one number, and one special character."
                  example: password123!
              required:
                - email
                - name
                - password
      responses:
        "200":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already registered
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/users/login:
    post:
      summary: User login
      description: |
        This endpoint allows a registered user to log in by providing their email and password. A successful login returns a token for authentication in subsequent requests.
      operationId: loginUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  example: password123!
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/users/logout:
    post:
      summary: User logout - IN DEVELOPMENT
      description: |
        This endpoint logs out the user by invalidating their authentication token, effectively ending their session.
      operationId: logoutUser
      tags:
        - Users
      parameters:
        - in: cookie
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Logout successful
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/users:
    put:
      summary: Update user profile - IN DEVELOPMENT
      description: |
        This endpoint allows a user to update their profile information, including email, name, and password. The email must be unique, and the password must meet the specified complexity requirements.
      operationId: updateUser
      tags:
        - Users
      parameters:
        - in: cookie
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "New email address (optional)."
                name:
                  type: string
                  description: "New name (must be at least 3 characters long, only letters and spaces, optional)."
                password:
                  type: string
                  description: "New password (must be at least 8 characters long, include one uppercase letter, one number, and one special character, optional)."
              example:
                email: newemail@example.com
                name: "New Company Name"
                password: "NewPassword123!"
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid details -- see schema
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "409":
          description: Email already in use
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
                    
    delete:
      summary: Remove user profile - IN DEVELOPMENT
      description: |
        This endpoint allows a user to delete their profile, removing all associated data from the system.
      operationId: removeUser
      tags:
        - Users
      parameters:
        - in: cookie
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User removed successfully
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/create:
    post:
      summary: Create a new invoice
      description: |
        This endpoint allows the creation of a new invoice with various fields that are inputted as a JSON object and will be converted to UBL XML format. Each field will be checked for its type and format (see the schema for more details). Required fields are: 
          - invoiceId
          - issueDate
          - buyer
          - supplier
          - total
          - items
      operationId: createInvoice
      tags:
        - Invoice v1
      parameters:
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Feel free to copy this request body for testing.
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceId:
                  type: string
                  example: TEST-INVOICE-ID
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be equal the sum of the item cost(s)
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code (ISO 4217)
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date and be of the format YYYY-MM-DD
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date and be of the format YYYY-MM-DD
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                      count:
                        type: number
                        example: 1
                        description: Must be greater than 0
                      cost:
                        type: number
                        format: double
                        example: 9.99
                buyerAddress:                                    
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer (ISO 3166-1 alpha-2)
                      example: "AU"
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier (ISO 3166-1 alpha-2)
                      example: "AU"
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceid:
                    type: string
        "400":
          description: If there are any missing requried fields or invalid details provided in the request body. 
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/list:  
    get:
      summary: List invoices with optional filters
      description: |
        This endpoint retrieves a list of invoices belonging to the user. 
        It supports optional filters such as limit, offset, sort, and order to customise the results.
  
        **Example route call:**
        `/v1/invoices/list?limit=10&offset=0&sort=issuedate&order=asc`
      operationId: listInvoices
      tags:
        - Invoice v1
      parameters:
        - name: token
          in: cookie
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: "Number of invoices to return (default: 10)."
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
          description: "Pagination: number of invoices to skip (default: 0)."
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: ["issuedate", "duedate", "total"]
          description: "Sort by field"
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: ["asc", "desc"]
          description: "Sorting order"
      responses:
        "200":
          description: List of invoices retrieved successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data:
                    type: object 
                    properties:
                      count: 
                        type: integer
                        description: Total number of invoices retrieved
                      invoices: 
                        type: array
                        items:
                          type: string
                          example: <Invoice>example</Invoice>
        "400":
          description: |
            Invalid details:
            - limit less than 1
            - offset less than 0
            - invalid sort query
            - invalid order query
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}:
    get:
      summary: Retrieve an invoice
      description: |
        This endpoint retrieves a specific invoice by its ID in XML format. It only allows the user who created it to retrieve the invoice. 
        - If a field was not included in the JSON request to create it, the corresponding UBL tag will be left out.
        - Additional UBL tags are added by default and are not customisable to follow PEPPOL guidelines. 
          - These tags include: Namespaces, InvoiceTypeCode, CustomizationID, ProfileID, and OrderReference
      operationId: getInvoice
      tags:
        - Invoice v1
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved invoice successfully
          content:
            application/xml:
              schema:
                type: object
                description: UBL-compliant XML invoice
                xml:
                  name: Invoice
                  namespace: "urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
                  prefix: "ubl"
                  attribute: false
                properties:
                  ID:
                    type: string
                    example: INV-001
                    xml:
                      name: cbc:ID
                      namespace: "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"
                  IssueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:IssueDate
                  DueDate:
                    type: string
                    format: date
                    xml:
                      name: cbc:DueDate
                  InvoiceTypeCode:
                    type: string
                    example: 380
                    xml:
                      name: cbc:InvoiceTypeCode
                  DocumentCurrencyCode:
                    type: string
                    example: AUD
                    xml:
                      name: cbc:DocumentCurrencyCode
                  CustomizationID:
                    type: string
                    xml:
                      name: cbc:CustomizationID
                  ProfileID:
                    type: string
                    xml:
                      name: cbc:ProfileID
                  OrderReference:
                    type: object
                    xml:
                      name: cac:OrderReference
                    properties:
                      ID:
                        type: string
                        xml:
                          name: cbc:ID
                  InvoiceDocumentReference:
                    type: object
                    xml:
                      name: cac:InvoiceDocumentReference
                    properties:
                      ID:
                        type: string
                        xml:
                          name: cbc:ID
                  AccountingSupplierParty:
                    type: object
                    xml:
                      name: cac:AccountingSupplierParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          PartyName:
                            type: object
                            xml:
                              name: cac:PartyName
                            properties:
                              Name:
                                type: string
                                xml:
                                  name: cbc:Name
                          PostalAddress:
                            type: object
                            xml:
                              name: cac:PostalAddress
                            properties:
                              StreetName:
                                type: string
                                xml:
                                  name: cbc:StreetName
                              Country:
                                type: object
                                xml:
                                  name: cac:Country
                                properties:
                                  IdentificationCode:
                                    type: string
                                    xml:
                                      name: cbc:IdentificationCode
                          Contact:
                            type: object
                            xml:
                              name: cac:Contact
                            properties:
                              Telephone:
                                type: string
                                xml:
                                  name: cbc:Telephone
                              ElectronicMail:
                                type: string
                                xml:
                                  name: cbc:ElectronicMail
                  AccountingCustomerParty:
                    type: object
                    xml:
                      name: cac:AccountingCustomerParty
                    properties:
                      Party:
                        type: object
                        xml:
                          name: cac:Party
                        properties:
                          PartyName:
                            type: object
                            xml:
                              name: cac:PartyName
                            properties:
                              Name:
                                type: string
                                xml:
                                  name: cbc:Name
                          PostalAddress:
                            type: object
                            xml:
                              name: cac:PostalAddress
                            properties:
                              StreetName:
                                type: string
                                xml:
                                  name: cbc:StreetName
                              Country:
                                type: object
                                xml:
                                  name: cac:Country
                                properties:
                                  IdentificationCode:
                                    type: string
                                    xml:
                                      name: cbc:IdentificationCode
                          Contact:
                            type: object
                            xml:
                              name: cac:Contact
                            properties:
                              Telephone:
                                type: string
                                xml:
                                  name: cbc:Telephone
                              ElectronicMail:
                                type: string
                                xml:
                                  name: cbc:ElectronicMail
                  PaymentMeans:
                    type: object
                    xml:
                      name: cac:PaymentMeans
                    properties:
                      PayeeFinancialAccount:
                        type: object
                        xml:
                          name: cac:PayeeFinancialAccount
                        properties:
                          ID:
                            type: string
                            xml:
                              name: cbc:ID
                          Name:
                            type: string
                            xml:
                              name: cbc:Name
                          FinancialInstitutionBranch:
                            type: object
                            xml:
                              name: cac:FinancialInstitutionBranch
                            properties:
                              ID:
                                type: string
                                xml:
                                  name: cbc:ID
                  LegalMonetaryTotal:
                    type: object
                    xml:
                      name: cac:LegalMonetaryTotal
                    properties:
                      PayableAmount:
                        type: object
                        xml:
                          name: cbc:PayableAmount
                        properties:
                          CurrencyId:
                            type: string
                            example: AUD
                            xml:
                              attribute: true
                          value:
                            type: number
                            format: double
                            description: Total amount payable
                            example: "0.00"
                  InvoiceLine:
                    type: array
                    xml:
                      name: cac:InvoiceLine
                    items:
                      type: object
                      properties:
                        ID:
                          type: string
                          xml:
                            name: cbc:ID
                        InvoicedQuantity:
                          type: number
                          format: integer
                          xml:
                            name: cbc:InvoicedQuantity
                        LineExtensionAmount:
                          type: number
                          format: double
                          xml:
                            name: cbc:LineExtensionAmount
                        Item:
                          type: object
                          xml: 
                            name: cac:Item
                          properties:
                            Name:
                              type: string
                              xml:
                                name: cbc:Name
                            ClassifiedTaxCategory:
                              type: object
                              xml:
                                name: cac:ClassifiedTaxCategory
                              properties:
                                ID:
                                  type: string
                                  xml:
                                    name: cbc:ID
                                TaxScheme:
                                  type: object
                                  xml:
                                    name: cac:TaxScheme
                                  properties:
                                    ID:
                                      type: string
                                      xml:
                                        name: cbc:ID
                        Price:
                          type: object
                          xml:
                            name: cac:Price
                          properties:
                            PriceAmount:
                              type: number
                              format: double
                              xml:
                                name: cbc:PriceAmount
                            BaseQuantity:
                              type: number
                              format: integer
                              xml:
                                name: cbc:BaseQuantity
        "400":
          description: Invalid invoiceid
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    put:
      summary: Update an invoice
      description: |
        This endpoint updates an existing invoice identified by its ID by inputting the a JSON object of the same format. Only allows the owner of the invoice to perform changes. 
      operationId: updateInvoice
      tags:
        - Invoice v1
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Feel free to copy this request body for testing.
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceId:
                  type: string
                  example: TEST-INVOICE-ID
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be equal the sum of the item cost(s)
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code (ISO 4217)
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date and be of the format YYYY-MM-DD
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date and be of the format YYYY-MM-DD
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                      count:
                        type: number
                        example: 1
                        description: Must be greater than 0
                      cost:
                        type: number
                        format: double
                        example: 9.99
                buyerAddress:                                    
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer (ISO 3166-1 alpha-2)
                      example: "AU"
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier (ISO 3166-1 alpha-2)
                      example: "AU"
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
                
      responses:
        "200":
          description: Invoice updated successfully
        "400":
          description: Invalid details
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

    delete:
      summary: Delete an invoice
      description: |
        This endpoint permanantly deletes a specific invoice identified by its ID, removing it from the system. Only allows the owner of the invoice to remove it. 
      operationId: deleteInvoice
      tags:
        - Invoice v1
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice deleted successfully
        "400":
          description: Invalid invoiceid
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/{invoiceid}/validate:
    post:
      summary: Validate invoice standard
      description: |
        This endpoint validates an invoice in the database against the UBL 2.4 standard as well as Australian Peppol standards.
        
        If the invoice is invalid, it will return a list of validation errors, with information on what is missing for a valid infvoice. 
        
        A list of checks performed is as follows (users only has to worry about points in **bold**):
        - Has the correct namesapce tag
        - Has all requried UBL tags: 'cbc:ID', 'cbc:IssueDate', 'cbc:InvoiceTypeCode', 'cac:AccountingSupplierParty', 'cac:AccountingCustomerParty', 'cac:LegalMonetaryTotal', 'cac:InvoiceLine', 'cbc:CustomizationID', 'cbc:ProfileID', 'cac:OrderReference', 'cac:InvoiceDocumentReference'
        - Valid invoice type code
        - **Buyer and supplier information is included (name, address, and country code)**
        - **Valid currency and country codes**
        - Items have necessary information (ID, **name, price, count**)
        
         
        
      operationId: validateInvoice
      tags:
        - Invoice v1
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invoice validated successfully
        "400":
          description: |
            Invalid details: failed one or more of the checks
          content: 
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: array
                    items:
                      type: string
                      example: 'Missing ____ (Peppol rule ___)'
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /v1/invoices/create-and-validate:
    post:
      summary: Create and validate an invoice
      description: |
        This endpoint has the same function as calling both the /create and /validate endopoints. It creates a new invoice then validates it against the UBL 2.4 standard as well as Australian Peppol standards.
        
        Note: The invoice will still be created even if the validation fails. 
      operationId: createAndValidateInvoice
      tags:
        - Invoice v1
      parameters:
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Feel free to copy this request body for testing.
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceId:
                  type: string
                  example: TEST-INVOICE-ID
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be equal the sum of the item cost(s)
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code (ISO 4217)
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date and be of the format YYYY-MM-DD
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date and be of the format YYYY-MM-DD
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                      count:
                        type: number
                        example: 1
                        description: Must be greater than 0
                      cost:
                        type: number
                        format: double
                        example: 9.99
                buyerAddress:                                    
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer (ISO 3166-1 alpha-2)
                      example: "AU"
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier (ISO 3166-1 alpha-2)
                      example: "AU"
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: INV-001
        "400":
          description: Creation or validation failure due to invalid input
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message
        "401":
          description: Invalid token
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  error: 
                    type: string
                    example: Specific error message

  /health:
    get:
      summary: Check API's status
      description: |
        This endpoint checks the current status of the API, confirming whether it is running and accessible.
      operationId: checkAPIStatus
      tags:
        - System
      responses:
        "200":
          description: API is running
          
  /v2/invoices/create:
    post:
      summary: Create a new invoice
      operationId: createInvoiceV2
      description: |
        This endpoint allows a new user to register by providing their email, name, and password. The email must be unique, and the password must meet the specified complexity requirements. 
        
        The main differences between the v1 endpoint and this version are:
        - users can now create an invoice with no required fields and our system marks it as **'invalid'** for later validation.
        - this allows users to save incomplete invoices or **draft invoices** and update/finish them later at their convenience.
        
        New fields that have been added include:
        - **taxRate** - the tax rate charged for the invoice.
        - **taxTotal** - the tax amount charged for the invoice. 
      tags:
        - Invoice v2
      parameters:
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceId:
                  type: string
                  example: TEST-INVOICE-ID
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be equal the sum of the item cost(s)
                taxRate:
                  type: number
                  format: double
                  example: "10"
                  description: Must be a number between 0 and 100
                taxTotal:
                  type: number
                  format: double
                  example: "1.00"
                  description: Must be equal to the total * taxRate
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code (ISO 4217)
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date and be of the format YYYY-MM-DD
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date and be of the format YYYY-MM-DD
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                      count:
                        type: number
                        example: 1
                        description: Must be greater than 0
                      cost:
                        type: number
                        format: double
                        example: 9.99
                buyerAddress:                                    
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer (ISO 3166-1 alpha-2)
                      example: "AU"
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier (ISO 3166-1 alpha-2)
                      example: "AU"
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: "e.g. INV-12345"
        "400":
          description: Invalid details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "e.g. Invalid invoice details"
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "e.g. Invalid authentication token"

  /v2/invoices/{invoiceid}/validate:
    post:
      summary: Validate invoice against selected standards
      operationId: validateInvoiceV2
      description: |
        This endpoint allows users to validate the invoices they have created. This new version of validation **keeps track of which of your invoices are valid/invalid** and allows users to **choose which schemas/rules** they want to validate their invoice against.
        
        ### Currently these are the available options (must include at least one):
        - **"peppol"** - the [Peppol International (PINT) Specifications for Australia & New Zealand](https://docs.peppol.eu/poac/aunz/pint-aunz/trn-invoice/syntax/ubl-Invoice/)
        - **"fairwork"** - [The Fairwork Commission (AUS) einvoicing guidelines](https://www.fwc.gov.au/documents/documents/resources/einvoicing-mandatory-fields.pdf)
        - **More on their way!**
        
        The response body has also been updated to provide a **more comprehensive report** on the validation. Now including validation warnings as well as errors. 
        - **Warnings** are helpful suggestions on your invoice but won't prevent you from validating it
        - **Errors** need to be fixed for the invoice to be validated
        
        _Note: the fairwork validation schema should be used in conjunction with the peppol schema._
      tags:
        - Invoice v2
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemas:
                  type: array
                  items:
                    type: string
                    enum: ["peppol", "fairwork"]
                  description: List of validation schemas to apply
      responses:
        "200":
          description: Invoice validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  validationWarnings:
                    type: array
                    items:
                      type: string
                    example: ["Warning: Invoice type code is not standard"]
        "400":
            description: Invalid details or validation failed
            content:
              application/json:
                schema:
                  oneOf:
                    - type: object
                      properties:
                        valid:
                          type: boolean
                          example: false
                        validationErrors:
                          type: array
                          items:
                            type: string
                          example: ["Missing supplier name", "Invalid currency code"]
                    - type: object
                      properties:
                        status:
                          type: string
                          example: error
                        error:
                          type: string
                          example: "Invoice not found"
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid authentication token"

  /v2/invoices/create-and-validate:
    post:
      summary: Create and validate an invoice with selected standards
      operationId: createAndValidateInvoiceV2
      description: |
        This endpoint allows users to create and validate an invoice simultaneously given the **invoice data**, and **schemas** it should validate against. 
        - The invoice request body format is the same as the one in *v2/invoices/create*.
        - and the possible schemas are the same as those in */v2/invoices/validate* **(at least one is required)**
        
        The request will be put through validation and **only be uploaded if it passes**. Else it will respond similarly to how the validate endpoint would. 
      tags:
        - Invoice v2
      parameters:
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice:
                  type: object
                  properties:
                    invoiceId:
                      type: string
                      example: TEST-INVOICE-ID
                    supplier:
                      type: string
                      example: supplier name
                    buyer:
                      type: string
                      example: buyer name
                    total:
                      type: number
                      format: double
                      example: 9.99
                      description: Must be equal the sum of the item cost(s)
                    taxRate:
                      type: number
                      format: double
                      example: "10"
                      description: Must be a number between 0 and 100
                    taxTotal:
                      type: number
                      format: double
                      example: "1.00"
                      description: Must be equal to the total * taxRate
                    currency:
                      type: string
                      description: Must be a valid 3 letter currency code (ISO 4217)
                      example: "AUD"
                    issueDate:
                      type: string
                      format: date
                      description: Must be a past date and be of the format YYYY-MM-DD
                    dueDate:
                      type: string
                      format: date
                      description: Must be on or after the issue date and be of the format YYYY-MM-DD
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          name: 
                            type: string
                          count:
                            type: number
                            example: 1
                            description: Must be greater than 0
                          cost:
                            type: number
                            format: double
                            example: 9.99
                    buyerAddress:                                    
                      type: object
                      properties:
                        street:
                          type: string
                          description: Street address of the buyer
                        country:
                          type: string
                          description: Country code of the buyer (ISO 3166-1 alpha-2)
                          example: "AU"
                    buyerEmail:
                      type: string
                      format: email
                      description: Email address of the buyer
                    buyerPhone:
                      type: string
                      description: Phone number of the buyer
                    supplierAddress:
                      type: object
                      properties:
                        street:
                          type: string
                          description: Street address of the supplier
                        country:
                          type: string
                          description: Country code of the supplier (ISO 3166-1 alpha-2)
                          example: "AU"
                    supplierEmail:
                      type: string
                      format: email
                      description: Email address of the supplier
                    supplierPhone:
                      type: string
                      description: Phone number of the supplier
                    paymentAccountId:
                      type: string
                      description: Bank account number
                    paymentAccountName:
                      type: string
                      description: Account name
                    financialInstitutionBranchId:
                      type: string
                      description: Branch identifier such as BSB
                schemas:
                  type: array
                  items:
                    type: string
                    enum: ["peppol", "fairwork"]
                  description: List of validation schemas to apply
      responses:
        "200":
          description: Invoice created and validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: "INV-12345"
                  valid:
                    type: boolean
                    example: true
                  validationWarnings:
                    type: array
                    items:
                      type: string
                    example: ["Warning: Invoice type code is not standard"]
        "400":
          description: Creation or validation failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: "INV-12345"
                  valid:
                    type: boolean
                    example: false
                  validationErrors:
                    type: array
                    items:
                      type: string
                    example: ["Missing supplier name", "Invalid currency code"]
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid authentication token"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /v2/invoices/{invoiceid}/update:
    put:
      summary: Update an invoice
      operationId: updateInvoiceV2
      description: |
        This endpoint allows users to update an invoice's details given the data in the request body. There are **no required fields** and fields can also be removed.
        
        **Performing an update on an invoice will invalidate it and will need to be validated again.**
      tags:
        - Invoice v2
      parameters:
        - name: invoiceid
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: cookie
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoiceId:
                  type: string
                  example: TEST-INVOICE-ID
                supplier:
                  type: string
                  example: supplier name
                buyer:
                  type: string
                  example: buyer name
                total:
                  type: number
                  format: double
                  example: 9.99
                  description: Must be equal the sum of the item cost(s)
                currency:
                  type: string
                  description: Must be a valid 3 letter currency code (ISO 4217)
                  example: "AUD"
                issueDate:
                  type: string
                  format: date
                  description: Must be a past date and be of the format YYYY-MM-DD
                dueDate:
                  type: string
                  format: date
                  description: Must be on or after the issue date and be of the format YYYY-MM-DD
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name: 
                        type: string
                      count:
                        type: number
                        example: 1
                        description: Must be greater than 0
                      cost:
                        type: number
                        format: double
                        example: 9.99
                buyerAddress:                                    
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the buyer
                    country:
                      type: string
                      description: Country code of the buyer (ISO 3166-1 alpha-2)
                      example: "AU"
                buyerEmail:
                  type: string
                  format: email
                  description: Email address of the buyer
                buyerPhone:
                  type: string
                  description: Phone number of the buyer
                supplierAddress:
                  type: object
                  properties:
                    street:
                      type: string
                      description: Street address of the supplier
                    country:
                      type: string
                      description: Country code of the supplier (ISO 3166-1 alpha-2)
                      example: "AU"
                supplierEmail:
                  type: string
                  format: email
                  description: Email address of the supplier
                supplierPhone:
                  type: string
                  description: Phone number of the supplier
                paymentAccountId:
                  type: string
                  description: Bank account number
                paymentAccountName:
                  type: string
                  description: Account name
                financialInstitutionBranchId:
                  type: string
                  description: Branch identifier such as BSB
      responses:
        "200":
          description: Invoice updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: string
                    example: "e.g. INV-12345"
        "400":
          description: Invalid details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "e.g. Invalid invoice details"
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "e.g. Invalid authentication token"
